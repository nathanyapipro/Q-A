{
  "query Answers($questionId: Int!) {\n  answers(orderBy: [CREATED_AT_ASC], condition: {questionId: $questionId}) {\n    nodes {\n      id\n      questionId\n      content\n      user {\n        id\n        username\n        role\n        __typename\n      }\n      createdAt\n      updatedAt\n      __typename\n    }\n    __typename\n  }\n}\n": 1,
  "query Comments($questionId: Int!, $last: Int) {\n  comments(last: $last, offset: 0, orderBy: [CREATED_AT_ASC], condition: {questionId: $questionId}) {\n    nodes {\n      id\n      questionId\n      user {\n        id\n        username\n        role\n        __typename\n      }\n      content\n      updatedAt\n      createdAt\n      __typename\n    }\n    totalCount\n    __typename\n  }\n}\n": 2,
  "mutation CreateAnswer($createAnswerInput: CreateAnswerInput!) {\n  createAnswer(input: $createAnswerInput) {\n    answer {\n      id\n      questionId\n      content\n      user {\n        id\n        username\n        role\n        __typename\n      }\n      createdAt\n      updatedAt\n      __typename\n    }\n    __typename\n  }\n}\n": 3,
  "mutation CreateComment($createCommentInput: CreateCommentInput!) {\n  createComment(input: $createCommentInput) {\n    comment {\n      id\n      questionId\n      user {\n        id\n        username\n        role\n        __typename\n      }\n      content\n      updatedAt\n      createdAt\n      __typename\n    }\n    __typename\n  }\n}\n": 4,
  "mutation CreateQuestion($createQuestionInput: CreateQuestionInput!) {\n  createQuestion(input: $createQuestionInput) {\n    question {\n      id\n      workspaceId\n      content\n      userId\n      status {\n        id\n        status\n        __typename\n      }\n      tagIds\n      questionTags {\n        nodes {\n          id\n          tag {\n            name\n            color\n            description\n            __typename\n          }\n          __typename\n        }\n        totalCount\n        __typename\n      }\n      voteCount\n      hasVoted\n      comments {\n        totalCount\n        __typename\n      }\n      createdAt\n      updatedAt\n      __typename\n    }\n    __typename\n  }\n}\n": 5,
  "mutation DeleteAnswerById($deleteAnswerByIdInput: DeleteAnswerByIdInput!) {\n  deleteAnswerById(input: $deleteAnswerByIdInput) {\n    answer {\n      id\n      __typename\n    }\n    __typename\n  }\n}\n": 6,
  "mutation DeleteCommentById($deleteCommentByIdInput: DeleteCommentByIdInput!) {\n  deleteCommentById(input: $deleteCommentByIdInput) {\n    comment {\n      id\n      __typename\n    }\n    __typename\n  }\n}\n": 7,
  "mutation DeleteQuestionById($deleteQuestionByIdInput: DeleteQuestionByIdInput!) {\n  deleteQuestionById(input: $deleteQuestionByIdInput) {\n    question {\n      id\n      __typename\n    }\n    __typename\n  }\n}\n": 8,
  "mutation LoginAnonymous($loginAnonymousInput: LoginAnonymousInput!) {\n  loginAnonymous(input: $loginAnonymousInput) {\n    auth {\n      jwtToken\n      currentUser {\n        id\n        username\n        role\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n": 9,
  "mutation Login($loginInput: LoginInput!) {\n  login(input: $loginInput) {\n    auth {\n      jwtToken\n      currentUser {\n        id\n        username\n        role\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n": 10,
  "query QuestionById($questionId: Int!) {\n  questionById(id: $questionId) {\n    id\n    workspaceId\n    content\n    userId\n    status {\n      id\n      status\n      __typename\n    }\n    tagIds\n    questionTags {\n      nodes {\n        id\n        tag {\n          name\n          color\n          description\n          __typename\n        }\n        __typename\n      }\n      totalCount\n      __typename\n    }\n    voteCount\n    hasVoted\n    answers(first: 1) {\n      nodes {\n        id\n        content\n        user {\n          id\n          username\n          __typename\n        }\n        createdAt\n        updatedAt\n        __typename\n      }\n      __typename\n    }\n    comments {\n      totalCount\n      __typename\n    }\n    createdAt\n    updatedAt\n    __typename\n  }\n}\n": 11,
  "query Questions($first: Int!, $offset: Int!, $orderBy: [QuestionsOrderBy!], $workspaceId: Int!, $filter: QuestionFilter) {\n  questions(first: $first, offset: $offset, orderBy: $orderBy, filter: $filter, condition: {workspaceId: $workspaceId}) {\n    nodes {\n      id\n      workspaceId\n      content\n      userId\n      status {\n        id\n        status\n        __typename\n      }\n      tagIds\n      questionTags {\n        nodes {\n          id\n          tag {\n            name\n            color\n            description\n            __typename\n          }\n          __typename\n        }\n        totalCount\n        __typename\n      }\n      voteCount\n      hasVoted\n      comments {\n        totalCount\n        __typename\n      }\n      createdAt\n      updatedAt\n      __typename\n    }\n    totalCount\n    __typename\n  }\n}\n": 12,
  "mutation QuestionToggleVote($questionToggleVoteInput: QuestionToggleVoteInput!) {\n  questionToggleVote(input: $questionToggleVoteInput) {\n    question {\n      id\n      content\n      userId\n      status {\n        id\n        status\n        __typename\n      }\n      tagIds\n      questionTags {\n        nodes {\n          id\n          tag {\n            name\n            color\n            description\n            __typename\n          }\n          __typename\n        }\n        totalCount\n        __typename\n      }\n      voteCount\n      hasVoted\n      comments {\n        totalCount\n        __typename\n      }\n      createdAt\n      updatedAt\n      __typename\n    }\n    __typename\n  }\n}\n": 13,
  "query Statuses {\n  statuses {\n    nodes {\n      id\n      status\n      __typename\n    }\n    __typename\n  }\n}\n": 14,
  "mutation UpdateAnswerById($updateAnswerByIdInput: UpdateAnswerByIdInput!) {\n  updateAnswerById(input: $updateAnswerByIdInput) {\n    answer {\n      id\n      questionId\n      content\n      user {\n        id\n        username\n        role\n        __typename\n      }\n      createdAt\n      updatedAt\n      __typename\n    }\n    __typename\n  }\n}\n": 15,
  "mutation UpdateCommentById($updateCommentByIdInput: UpdateCommentByIdInput!) {\n  updateCommentById(input: $updateCommentByIdInput) {\n    comment {\n      id\n      questionId\n      user {\n        id\n        username\n        role\n        __typename\n      }\n      content\n      updatedAt\n      createdAt\n      __typename\n    }\n    __typename\n  }\n}\n": 16,
  "mutation UpdateQuestionById($updateQuestionByIdInput: UpdateQuestionByIdInput!) {\n  updateQuestionById(input: $updateQuestionByIdInput) {\n    question {\n      id\n      workspaceId\n      content\n      userId\n      status {\n        id\n        status\n        __typename\n      }\n      tagIds\n      questionTags {\n        nodes {\n          id\n          tag {\n            name\n            color\n            description\n            __typename\n          }\n          __typename\n        }\n        totalCount\n        __typename\n      }\n      voteCount\n      hasVoted\n      answers(first: 1) {\n        nodes {\n          id\n          content\n          user {\n            id\n            username\n            __typename\n          }\n          createdAt\n          updatedAt\n          __typename\n        }\n        __typename\n      }\n      comments {\n        totalCount\n        __typename\n      }\n      createdAt\n      updatedAt\n      __typename\n    }\n    __typename\n  }\n}\n": 17,
  "query Workspaces($email: String) {\n  workspaces(email: $email) {\n    nodes {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n}\n": 18,
  "query WorkspaceTags($workspaceId: Int!, $onlyEnabled: Boolean) {\n  workspaceTags(filter: {workspaceId: {equalTo: $workspaceId}, isEnabled: {equalTo: $onlyEnabled}}) {\n    nodes {\n      id\n      tag {\n        id\n        name\n        color\n        description\n        __typename\n      }\n      isEnabled\n      __typename\n    }\n    __typename\n  }\n}\n": 19
}
